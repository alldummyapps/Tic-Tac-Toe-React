{"ast":null,"code":"import _slicedToArray from \"/Users/pcpc/Desktop/react apps/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pcpc/Desktop/react apps/tic-tac-toe/src/components/Game.jsx\";\nimport React, { Component } from 'react';\nimport Board from './Board';\n\nclass Game extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      xNext: true,\n      stepNumber: 0,\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      lineWinner: null\n    };\n\n    this.calculateWinner = squares => {\n      const winLines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n      for (let i = 0; i < winLines.length; i++) {\n        const _winLines$i = _slicedToArray(winLines[i], 3),\n              a = _winLines$i[0],\n              b = _winLines$i[1],\n              c = _winLines$i[2];\n\n        if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\n          return squares[a];\n        }\n      }\n\n      return null;\n    };\n\n    this.resetGame = step => {\n      this.setState({\n        stepNumber: step\n      });\n    };\n\n    this.handleClick = i => {\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n      const winner = this.calculateWinner(squares);\n\n      if (winner || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.xNext ? 'X' : 'O';\n      this.setState({\n        history: history.concat({\n          squares: squares\n        }),\n        xNext: !this.state.xNext,\n        stepNumber: history.length\n      });\n    };\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = this.calculateWinner(current.squares);\n    let status;\n\n    if (winner) {\n      status = 'winner is ' + winner;\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"gameBoard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Board, {\n      clicked: i => this.handleClick(i),\n      squares: current.squares,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"resetBtn\",\n      onClick: () => {\n        this.resetGame(0);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Reset Game\")))));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/pcpc/Desktop/react apps/tic-tac-toe/src/components/Game.jsx"],"names":["React","Component","Board","Game","state","xNext","stepNumber","history","squares","Array","fill","lineWinner","calculateWinner","winLines","i","length","a","b","c","resetGame","step","setState","handleClick","slice","current","winner","concat","render","status","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Board from './Board';\n\n\n\n\n\n\nclass Game extends Component {\n  \n\n\nstate ={\n        xNext:true,\n        stepNumber: 0,\n        history:[\n            {squares:Array(9).fill(null)}\n        ],\n        lineWinner: null\n}\n\ncalculateWinner =(squares) => {\n\n    const winLines = [\n        [0,1,2],\n        [3,4,5],\n        [6,7,8],\n        [0,3,6],\n        [1,4,7],\n        [2,5,8],\n        [0,4,8],\n        [2,4,6]\n    ]\n    \n    for(let i=0; i<winLines.length;i++){\n        const [a,b,c] = winLines[i]\n        if(squares[a] &&squares[a] === squares[b] && squares[b] === squares[c]){\n    \n            \n            return squares[a]\n        }\n    }\n    \n    \n        return null\n    }\n\n\nresetGame = (step) =>{\n\n    this.setState({\n    stepNumber: step,\n    })\n    \n    }\n\nhandleClick = (i) =>{\nconst history = this.state.history.slice(0,this.state.stepNumber + 1);\nconst current = history[history.length-1]\nconst squares = current.squares.slice();\n\nconst winner = this.calculateWinner(squares)\nif(winner || squares[i]){\n    return;\n}\n\nsquares[i] = this.state.xNext ? 'X': 'O';\n\nthis.setState({\nhistory: history.concat({\nsquares:squares,\n}),\nxNext: !this.state.xNext,\nstepNumber: history.length\n\n\n})\n\n\n}\n\n    render() { \n\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = this.calculateWinner(current.squares);\n\n        let status;\n        if(winner){\n        status = 'winner is ' + winner;\n        \n        }\n        return (  \n          <React.Fragment>\n              <div style={{ fontWeight: \"bold\"}}  >{status}</div>\n<div className=\"game\">\n<div className=\"gameBoard\">\n    \n<Board  clicked={(i) => this.handleClick(i)}  squares={current.squares}/>\n</div>\n<div className=\"game-info\">\n<div><button className=\"resetBtn\" onClick={()=> {this.resetGame(0)}}>Reset Game</button></div>\n\n\n\n</div>\n</div>\n\n\n</React.Fragment>\n        );\n    }\n}\n \nexport default Game;"]},"metadata":{},"sourceType":"module"}