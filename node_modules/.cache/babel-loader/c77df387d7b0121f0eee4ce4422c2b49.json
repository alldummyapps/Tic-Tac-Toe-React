{"ast":null,"code":"import _slicedToArray from \"/Users/pcpc/Desktop/react apps/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pcpc/Desktop/react apps/tic-tac-toe/src/components/Game.jsx\";\nimport React, { Component } from 'react';\nimport Board from './Board';\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nclass Game extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      xIsNext: true,\n      stepNumber: 0,\n      history: [{\n        squares: Array(9).fill(null)\n      }]\n    };\n\n    this.resetGame = history => {\n      const moves = history.map((step, move) => {\n        return React.createElement(\"li\", {\n          key: move,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: () => {\n            this.jumpTo(move);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, desc));\n      });\n    };\n\n    this.jumpTo = step => {\n      this.setState({\n        stepNumber: step,\n        xIsNext: step % 2 === 0\n      });\n    };\n\n    this.handleClick = i => {\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n      const winner = calculateWinner(squares);\n\n      if (winner || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        history: history.concat({\n          squares: squares\n        }),\n        xIsNext: !this.state.xIsNext,\n        stepNumber: history.length\n      });\n    };\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    let status;\n\n    if (winner) {\n      status = 'winner is ' + winner;\n    } else {\n      status = 'next player is ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"gameBoard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Board, {\n      clicked: i => this.handleClick(i),\n      squares: current.squares,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, status), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, moves)));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/pcpc/Desktop/react apps/tic-tac-toe/src/components/Game.jsx"],"names":["React","Component","Board","calculateWinner","squares","lines","i","length","a","b","c","Game","state","xIsNext","stepNumber","history","Array","fill","resetGame","moves","map","step","move","jumpTo","desc","setState","handleClick","slice","current","winner","concat","render","status"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Board from './Board';\n\n\n\nfunction calculateWinner(squares){\n\nconst lines = [\n    [0,1,2],\n    [3,4,5],\n    [6,7,8],\n    [0,3,6],\n    [1,4,7],\n    [2,5,8],\n    [0,4,8],\n    [2,4,6]\n]\n\nfor(let i=0; i<lines.length;i++){\n    const [a,b,c] = lines[i]\n    if(squares[a] &&squares[a] === squares[b] && squares[b] === squares[c]){\n\n        return squares[a]\n    }\n}\n\n\n    return null\n}\n\n\nclass Game extends Component {\n  \n\n\nstate ={\n        xIsNext:true,\n        stepNumber: 0,\n        history:[\n            {squares:Array(9).fill(null)}\n        ]     \n}\n\n\nresetGame = (history) =>{\n\n    const moves = history.map((step,move)=>{\n        return (\n        <li key={move}>\n            <button onClick={()=> {this.jumpTo(move)}}>{desc}</button>\n        </li>\n        \n        )\n        \n                });\n        \n}\n\njumpTo = (step) =>{\n\n    this.setState({\n    stepNumber: step,\n    xIsNext: (step%2) === 0,\n    \n    })\n    \n    }\n\nhandleClick = (i) =>{\nconst history = this.state.history.slice(0,this.state.stepNumber + 1);\nconst current = history[history.length-1]\nconst squares = current.squares.slice();\n\nconst winner = calculateWinner(squares);\nif(winner || squares[i]){\n    return;\n}\n\nsquares[i] = this.state.xIsNext ? 'X': 'O';\n\nthis.setState({\nhistory: history.concat({\nsquares:squares,\n}),\nxIsNext: !this.state.xIsNext,\nstepNumber: history.length\n\n\n})\n\n\n}\n\n    render() { \n\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n       \n\n        let status;\n        if(winner){\n        status = 'winner is ' + winner;\n        \n        }else{\n            status = 'next player is ' + (this.state.xIsNext? 'X': 'O');\n        }\n\n        return (  \n          \n\n<div className=\"game\">\n<div className=\"gameBoard\">\n    \n<Board  clicked={(i) => this.handleClick(i)}  squares={current.squares}/>\n</div>\n<div className=\"game-info\">\n<div>{status}</div>\n<ul>{moves}</ul>\n\n</div>\n</div>\n\n\n\n        );\n    }\n}\n \nexport default Game;"]},"metadata":{},"sourceType":"module"}