{"ast":null,"code":"import _slicedToArray from \"/Users/pcpc/Desktop/react apps/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pcpc/Desktop/react apps/tic-tac-toe/src/components/Game.jsx\";\nimport React, { Component } from 'react';\nimport Board from './Board';\n\nclass Game extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      xNext: true,\n      stepNumber: 0,\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      playerOneScore: 0,\n      playerTwoScore: 0\n    };\n\n    this.calculateWinner = squares => {\n      const winLines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n      for (let i = 0; i < winLines.length; i++) {\n        const _winLines$i = _slicedToArray(winLines[i], 3),\n              a = _winLines$i[0],\n              b = _winLines$i[1],\n              c = _winLines$i[2];\n\n        if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\n          return squares[a];\n        }\n      }\n\n      return null;\n    };\n\n    this.resetGame = (step, winner) => {\n      this.setState({\n        stepNumber: step\n      });\n      this.handleScore(winner);\n    };\n\n    this.handleScore = winner => {\n      if (winner === 'X') {\n        let playerOneScore = this.state.playerOneScore;\n        this.setState({\n          playerOneScore: playerOneScore += 1\n        });\n      } else {\n        let playerTwoScore = this.state.playerTwoScore;\n        this.setState({\n          playerTwoScore: playerTwoScore += 1\n        });\n      }\n    };\n\n    this.handleClick = i => {\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n      const winner = this.calculateWinner(squares);\n\n      if (winner || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.xNext ? 'X' : 'O';\n      this.setState({\n        history: history.concat({\n          squares: squares\n        }),\n        xNext: !this.state.xNext,\n        stepNumber: history.length\n      });\n    };\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = this.calculateWinner(current.squares);\n    let status = winner ? winner === \"X\" ? \"Player One\" : \"Player Two\" : null;\n    console.log(status);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"scoreBoard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Current Winner: \", status), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Player one: X\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Player two: O\")), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Player One Score: \", this.state.playerOneScore), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Player Two Score: \", this.state.playerTwoScore), React.createElement(\"div\", {\n      style: {\n        float: \"left\",\n        marginTop: \"60px\",\n        marginLeft: \"45px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"resetBtn\",\n      onClick: () => {\n        this.resetGame(0, winner);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Reset Game\"))), React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"gameBoard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Board, {\n      clicked: i => this.handleClick(i),\n      squares: current.squares,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/pcpc/Desktop/react apps/tic-tac-toe/src/components/Game.jsx"],"names":["React","Component","Board","Game","state","xNext","stepNumber","history","squares","Array","fill","playerOneScore","playerTwoScore","calculateWinner","winLines","i","length","a","b","c","resetGame","step","winner","setState","handleScore","handleClick","slice","current","concat","render","status","console","log","fontWeight","float","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Board from './Board';\n\n\n\n\n\n\nclass Game extends Component {\n  \n\n\nstate ={\n        xNext:true,\n        stepNumber: 0,\n        history:[\n            {squares:Array(9).fill(null)}\n        ],\n        playerOneScore: 0,\n        playerTwoScore: 0,\n        \n       \n}\n\ncalculateWinner =(squares) => {\n\n    const winLines = [\n        [0,1,2],\n        [3,4,5],\n        [6,7,8],\n        [0,3,6],\n        [1,4,7],\n        [2,5,8],\n        [0,4,8],\n        [2,4,6]\n    ]\n    \n    for(let i=0; i<winLines.length;i++){\n        const [a,b,c] = winLines[i]\n        if(squares[a] &&squares[a] === squares[b] && squares[b] === squares[c]){\n          \n            return squares[a]\n        }\n    }\n    \n    \n        return null\n    }\n\n\nresetGame = (step, winner) =>{\n\n    this.setState({\n    stepNumber: step,\n    })\n    this.handleScore(winner)\n\n    }\n\n\n    handleScore = (winner) => {\n\n        if(winner === 'X'){\n            let playerOneScore =this.state.playerOneScore\n            this.setState({playerOneScore: playerOneScore+=1})\n        }else{\n            let playerTwoScore =this.state.playerTwoScore\n            this.setState({playerTwoScore: playerTwoScore+=1})\n        }\n\n    }\n\nhandleClick = (i) =>{\nconst history = this.state.history.slice(0,this.state.stepNumber + 1);\nconst current = history[history.length-1]\nconst squares = current.squares.slice();\nconst winner = this.calculateWinner(squares)\nif(winner || squares[i]){\n  \n    return;\n}\n\nsquares[i] = this.state.xNext ? 'X': 'O';\n\nthis.setState({\nhistory: history.concat({\nsquares:squares,\n}),\nxNext: !this.state.xNext,\nstepNumber: history.length\n\n\n})\n\n\n}\n\n\n\n    render() { \n\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = this.calculateWinner(current.squares);\n\n        let status = winner ? ( winner === \"X\")  ? \"Player One\" : \"Player Two\" : null\n        console.log(status)\n       \n        return (  \n          <React.Fragment>\n<div className=\"scoreBoard\">\n    <div style={{ fontWeight: \"bold\"}}  >Current Winner: {status}</div>\n    <div><h4>Player one: X</h4>\n    <h4>Player two: O</h4></div>\n    <h4>Player One Score: {this.state.playerOneScore}</h4>\n    <h4>Player Two Score: {this.state.playerTwoScore}</h4>\n    <div style={{float:\"left\", marginTop:\"60px\", marginLeft:\"45px\"}}>\n    <button  className=\"resetBtn\" onClick={()=> {this.resetGame(0,winner)}}>Reset Game</button>\n    </div>\n    </div>\n    \n<div className=\"game\">\n  \n<div className=\"gameBoard\">\n    \n<Board  clicked={(i) => this.handleClick(i)}  squares={current.squares}/>\n</div>\n<div className=\"game-info\">\n\n\n\n\n</div>\n</div>\n\n\n</React.Fragment>\n        );\n    }\n}\n \nexport default Game;"]},"metadata":{},"sourceType":"module"}